name: Continuous Integration Python 3.9.16

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches: [ main ]

jobs:
  
  CI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9.16
      uses: actions/setup-python@v1
      with:
        python-version: 3.9.16
    - name: Install Dependencies
      run: |
        make install
    - name: Linting
      run: |
        make lint
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION_NAME }}
    - name: Fetch model artifact from S3
      run: aws s3 cp ${{ secrets.AWS_S3_MODEL_URI }} output
    - name: Unit Tests
      run: |
        make test
    # - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@v1
    # - name: Build, tag, and push docker image to Amazon ECR
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
    #     IMAGE_TAG: version1
    #     run: |
    #       docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
    #       docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION_NAME }}
    # - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@v1
    # - name: Deploy Lambda Function
    #   run: aws lambda update-function-code --function_name <NAME> --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
    #     IMAGE_TAG: version1
